// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApiWithRoleAuthentication.Data;

#nullable disable

namespace WebApiWithRoleAuthentication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250324062219_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("DiscountPresent")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ShoppingCartId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TouristRouteId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShoppingCartId");

                    b.HasIndex("TouristRouteId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDateUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionMetadata")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.TouristRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartureCity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<double?>("DiscountPresent")
                        .HasColumnType("double precision");

                    b.Property<string>("Features")
                        .HasColumnType("text");

                    b.Property<string>("Fees")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("TravelDays")
                        .HasColumnType("integer");

                    b.Property<int?>("TripType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("TouristRoutes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb6d4f10-79ed-4aff-a915-4ce29dc9c7e1"),
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "【官方旗艦明星純玩團】25人封頂|含簽證小費全程餐|3晚尼羅河遊輪+3晚紅海全包度假村+1晚底比斯古都|升級內陸飛機|優質中文導遊隊伍|七大神廟+贈項目",
                            DiscountPresent = 0.10000000000000001,
                            Features = "",
                            Fees = "",
                            Notes = "",
                            OriginalPrice = 11999.99m,
                            Title = "埃及阿斯旺+盧克索+紅海Red Sea+開羅+亞歷山大12日跟團遊(5鑽)"
                        },
                        new
                        {
                            Id = new Guid("a1fd0bee-0afc-4586-96c8-f46b7c99d2a0"),
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "『攜程自營·2成人立減200！』生活著的古鎮——尋味5A西塘【明星漫遊·春意江南】宿烏鎮&品牌5鑽 +199升枕水 宋城自選",
                            DiscountPresent = 0.10000000000000001,
                            Features = "",
                            Fees = "",
                            Notes = "",
                            OriginalPrice = 799.98m,
                            Title = "蘇州+烏鎮+杭州3日2晚跟團遊(5鑽)"
                        },
                        new
                        {
                            Id = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47119"),
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "【酒店自選|航班多選】5晚連住 酒店超優價|拔草恐龍灣&鑽石頭山&大風口&珍珠港|首府檀香山 威基基海灘 經典行程 初遊打卡",
                            Features = "",
                            Fees = "",
                            Notes = "",
                            OriginalPrice = 7003m,
                            Title = "美國夏威夷7日5晚自由行·『性價比甄選』"
                        });
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.TouristRoutePicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("TouristRouteId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("TouristRouteId");

                    b.ToTable("TouristRoutePictures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TouristRouteId = new Guid("fb6d4f10-79ed-4aff-a915-4ce29dc9c7e1"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 2,
                            TouristRouteId = new Guid("fb6d4f10-79ed-4aff-a915-4ce29dc9c7e1"),
                            Url = "../../assets/images/japan-2014618_640.jpg"
                        },
                        new
                        {
                            Id = 3,
                            TouristRouteId = new Guid("fb6d4f10-79ed-4aff-a915-4ce29dc9c7e1"),
                            Url = "../../assets/images/ocean-829715_640.jpg"
                        },
                        new
                        {
                            Id = 4,
                            TouristRouteId = new Guid("fb6d4f10-79ed-4aff-a915-4ce29dc9c7e1"),
                            Url = "../../assets/images/osaka-2159435_640.jpg"
                        },
                        new
                        {
                            Id = 5,
                            TouristRouteId = new Guid("a1fd0bee-0afc-4586-96c8-f46b7c99d2a0"),
                            Url = "../../assets/images/japan-2014618_640.jpg"
                        },
                        new
                        {
                            Id = 6,
                            TouristRouteId = new Guid("a1fd0bee-0afc-4586-96c8-f46b7c99d2a0"),
                            Url = "../../assets/images/osaka-2159435_640.jpg"
                        },
                        new
                        {
                            Id = 7,
                            TouristRouteId = new Guid("a1fd0bee-0afc-4586-96c8-f46b7c99d2a0"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 8,
                            TouristRouteId = new Guid("a1fd0bee-0afc-4586-96c8-f46b7c99d2a0"),
                            Url = "../../assets/images/castle-1736779_640.jpg"
                        },
                        new
                        {
                            Id = 9,
                            TouristRouteId = new Guid("3ecbcd92-a9e0-45f7-9b29-e03272cb0862"),
                            Url = "../../assets/images/ocean-829715_640.jpg"
                        },
                        new
                        {
                            Id = 10,
                            TouristRouteId = new Guid("3ecbcd92-a9e0-45f7-9b29-e03272cb0862"),
                            Url = "../../assets/images/osaka-2159435_640.jpg"
                        },
                        new
                        {
                            Id = 11,
                            TouristRouteId = new Guid("3ecbcd92-a9e0-45f7-9b29-e03272cb0862"),
                            Url = "../../assets/images/milky-way-1023340_640.jpg"
                        },
                        new
                        {
                            Id = 12,
                            TouristRouteId = new Guid("3ecbcd92-a9e0-45f7-9b29-e03272cb0862"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 13,
                            TouristRouteId = new Guid("3ecbcd92-a9e0-45f7-9b29-e03272cb0862"),
                            Url = "../../assets/images/osaka-castle-1398116_640.jpg"
                        },
                        new
                        {
                            Id = 14,
                            TouristRouteId = new Guid("88cf89b9-e4b5-4b42-a5bf-622bd3039601"),
                            Url = "../../assets/images/shanghai-2446326_640.jpg"
                        },
                        new
                        {
                            Id = 15,
                            TouristRouteId = new Guid("88cf89b9-e4b5-4b42-a5bf-622bd3039601"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 16,
                            TouristRouteId = new Guid("88cf89b9-e4b5-4b42-a5bf-622bd3039601"),
                            Url = "../../assets/images/symbol-600334_640.jpg"
                        },
                        new
                        {
                            Id = 17,
                            TouristRouteId = new Guid("88cf89b9-e4b5-4b42-a5bf-622bd3039601"),
                            Url = "../../assets/images/railroad-tracks-163518_640.jpg"
                        },
                        new
                        {
                            Id = 18,
                            TouristRouteId = new Guid("88cf89b9-e4b5-4b42-a5bf-622bd3039601"),
                            Url = "../../assets/images/osaka-castle-1398116_640.jpg"
                        },
                        new
                        {
                            Id = 19,
                            TouristRouteId = new Guid("2430bf64-fd56-460c-8b75-da0a1d1cd74c"),
                            Url = "../../assets/images/japan-2014618_640.jpg"
                        },
                        new
                        {
                            Id = 20,
                            TouristRouteId = new Guid("2430bf64-fd56-460c-8b75-da0a1d1cd74c"),
                            Url = "../../assets/images/milky-way-1023340_640.jpg"
                        },
                        new
                        {
                            Id = 21,
                            TouristRouteId = new Guid("2430bf64-fd56-460c-8b75-da0a1d1cd74c"),
                            Url = "../../assets/images/castle-1736779_640.jpg"
                        },
                        new
                        {
                            Id = 22,
                            TouristRouteId = new Guid("2430bf64-fd56-460c-8b75-da0a1d1cd74c"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 23,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47169"),
                            Url = "../../assets/images/osaka-castle-1398116_640.jpg"
                        },
                        new
                        {
                            Id = 24,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47169"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 25,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47169"),
                            Url = "../../assets/images/ocean-829715_640.jpg"
                        },
                        new
                        {
                            Id = 26,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47169"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 27,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47169"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 28,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47110"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 29,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47110"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 30,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47110"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 31,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47110"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 32,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47111"),
                            Url = "../../assets/images/castle-1736779_640.jpg"
                        },
                        new
                        {
                            Id = 33,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47111"),
                            Url = "../../assets/images/castle-1736779_640.jpg"
                        },
                        new
                        {
                            Id = 34,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47111"),
                            Url = "../../assets/images/castle-1736779_640.jpg"
                        },
                        new
                        {
                            Id = 35,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47111"),
                            Url = "../../assets/images/castle-1736779_640.jpg"
                        },
                        new
                        {
                            Id = 36,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47112"),
                            Url = "../../assets/images/ocean-829715_640.jpg"
                        },
                        new
                        {
                            Id = 37,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47112"),
                            Url = "../../assets/images/ocean-829715_640.jpg"
                        },
                        new
                        {
                            Id = 38,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47112"),
                            Url = "../../assets/images/ocean-829715_640.jpg"
                        },
                        new
                        {
                            Id = 39,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47112"),
                            Url = "../../assets/images/ocean-829715_640.jpg"
                        },
                        new
                        {
                            Id = 40,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47113"),
                            Url = "../../assets/images/osaka-castle-1398116_640.jpg"
                        },
                        new
                        {
                            Id = 41,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47113"),
                            Url = "../../assets/images/osaka-castle-1398116_640.jpg"
                        },
                        new
                        {
                            Id = 42,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47113"),
                            Url = "../../assets/images/osaka-castle-1398116_640.jpg"
                        },
                        new
                        {
                            Id = 43,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47114"),
                            Url = "../../assets/images/osaka-castle-1398116_640.jpg"
                        },
                        new
                        {
                            Id = 44,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47114"),
                            Url = "../../assets/images/japan-2014618_640.jpg"
                        },
                        new
                        {
                            Id = 45,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47114"),
                            Url = "../../assets/images/japan-2014618_640.jpg"
                        },
                        new
                        {
                            Id = 46,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47114"),
                            Url = "../../assets/images/japan-2014618_640.jpg"
                        },
                        new
                        {
                            Id = 47,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47114"),
                            Url = "../../assets/images/japan-2014618_640.jpg"
                        },
                        new
                        {
                            Id = 48,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47115"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 49,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47115"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 50,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47115"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 51,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47115"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 52,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47115"),
                            Url = "../../assets/images/paris-843229_640.jpg"
                        },
                        new
                        {
                            Id = 53,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47116"),
                            Url = "../../assets/images/milky-way-1023340_640.jpg"
                        },
                        new
                        {
                            Id = 54,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47116"),
                            Url = "../../assets/images/milky-way-1023340_640.jpg"
                        },
                        new
                        {
                            Id = 55,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47116"),
                            Url = "../../assets/images/milky-way-1023340_640.jpg"
                        },
                        new
                        {
                            Id = 56,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47116"),
                            Url = "../../assets/images/milky-way-1023340_640.jpg"
                        },
                        new
                        {
                            Id = 57,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47117"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 58,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47117"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 59,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47117"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 60,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47117"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 61,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47118"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 62,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47118"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 63,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47118"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 64,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47118"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 65,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47119"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 66,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47119"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 67,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47119"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        },
                        new
                        {
                            Id = 68,
                            TouristRouteId = new Guid("39996f34-013c-4fc6-b1b3-0c1036c47119"),
                            Url = "../../assets/images/louvre-102840_640.jpg"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.LineItem", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("WebApiWithRoleAuthentication.Models.ShoppingCart", null)
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("ShoppingCartId");

                    b.HasOne("WebApiWithRoleAuthentication.Models.TouristRoute", "TouristRoute")
                        .WithMany()
                        .HasForeignKey("TouristRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TouristRoute");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.Order", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.ShoppingCart", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.ApplicationUser", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("WebApiWithRoleAuthentication.Models.ShoppingCart", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.TouristRoutePicture", b =>
                {
                    b.HasOne("WebApiWithRoleAuthentication.Models.TouristRoute", "TouristRoute")
                        .WithMany("TouristRoutePictures")
                        .HasForeignKey("TouristRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TouristRoute");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Orders");

                    b.Navigation("ShoppingCart");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartItems");
                });

            modelBuilder.Entity("WebApiWithRoleAuthentication.Models.TouristRoute", b =>
                {
                    b.Navigation("TouristRoutePictures");
                });
#pragma warning restore 612, 618
        }
    }
}
